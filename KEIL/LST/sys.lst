C51 COMPILER V9.60.0.0   SYS                                                               12/18/2023 17:44:27 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SYS
OBJECT MODULE PLACED IN .\Output\sys.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\..\..\Library\StdDriver\src\sys.c LARGE OMF2 OPTIMIZE(7,SPEED) BRO
                    -WSE INCDIR(..\..\..\..\Library\Device\Include;..\..\..\..\Library\StdDriver\inc) DEBUG PRINT(.\LST\sys.lst) TABS(2) OBJE
                    -CT(.\Output\sys.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* SPDX-License-Identifier: Apache-2.0                                                                    
             - */
   4          /* Copyright(c) 2022 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   5          /*                                                                                                        
             - */
   6          /*--------------------------------------------------------------------------------------------------------
             --*/
   7          #include "ms51_16k.h"
   8          
   9          unsigned char data  TA_REG_TMP,BYTE_TMP,SFRS_TMP;
  10          
  11            /**
  12            * @brief This API configures modify system HIRC value
  13            * @param[in] u8FsysMode . Valid values are:
  14            *                       - \ref HIRC_24                 :Internal HIRC 24MHz .
  15            *                       - \ref HIRC_16                 :Internal HIRC 16MHz.
  16            *                       - \ref HIRC_166                :Internal HIRC 16.6MHz.
  17            * @note      None.
  18            * @exmaple : MODIFY_HIRC(HIRC_24);
  19            */
  20           void MODIFY_HIRC(unsigned char u8HIRCSEL)
  21          {
  22   1          unsigned char data hircmap0,hircmap1, offset,judge;
  23   1          unsigned char trimvalue16bit;
  24   1      
  25   1          set_CHPCON_IAPEN;
  26   1          SFRS = 0 ;
  27   1          switch (u8HIRCSEL)
  28   1          {
  29   2            case HIRC_24:
  30   2              IAPAL = 0x38;
  31   2            break;
  32   2            case HIRC_16:
  33   2              IAPAL = 0x30;
  34   2            break;
  35   2            case HIRC_166:
  36   2              IAPAL = 0x30;
  37   2            break;
  38   2          }
  39   1          IAPAH = 0x00;
  40   1          IAPCN = READ_UID;
  41   1          set_IAPTRG_IAPGO;
  42   1          hircmap0 = IAPFD;
  43   1          IAPAL++;
  44   1          set_IAPTRG_IAPGO;
  45   1          hircmap1 = IAPFD;
  46   1      
  47   1          switch (u8HIRCSEL)
C51 COMPILER V9.60.0.0   SYS                                                               12/18/2023 17:44:27 PAGE 2   

  48   1          { 
  49   2            case HIRC_166:
  50   2              trimvalue16bit = ((hircmap0 << 1) + (hircmap1 & 0x01));
  51   2              judge = trimvalue16bit&0xC0;
  52   2              offset = trimvalue16bit&0x3F;
  53   2              trimvalue16bit -= 14;
  54   2              IAPCN = READ_DID;
  55   2              IAPAL = 1;
  56   2              IAPAH = 0;
  57   2              set_IAPTRG_IAPGO_WDCLR;
  58   2      
  59   2              if ((IAPFD==0x4B)||(IAPFD==0x52)||(IAPFD==0x53))    /* MS51 process */
  60   2              {
  61   3                if (offset<15)
  62   3                  {
  63   4                    if ((judge==0x40)||(judge==0x80)||(judge==0xC0))
  64   4                    trimvalue16bit -= 14;
  65   4                  }
  66   3                else
  67   3                    trimvalue16bit -= 4;
  68   3              }
  69   2              hircmap0 = (trimvalue16bit >> 1);
  70   2            break;
  71   2      
  72   2              default: break;                                       /*N76E003 process */
  73   2          }
  74   1      
  75   1          TA = 0xAA;
  76   1          TA = 0x55;
  77   1          RCTRIM0 = hircmap0;
  78   1          TA = 0xAA;
  79   1          TA = 0x55;
  80   1          RCTRIM1 = hircmap1;
  81   1          clr_CHPCON_IAPEN;
  82   1      }
  83          
  84          
  85            /**
  86            * @brief This API configures system clock source
  87            * @param[in] u8FsysMode . Valid values are:
  88            *                       - \ref FSYS_HIRC                :Internal HIRC (16MHz as default).
  89            *                       - \ref FSYS_LIRC                :Internal LIRC.
  90            *                       - \ref FSYS_OSCIN_P00           :External clock input from P0.0.
  91            * @note      None.
  92            * @exmaple : FsysSelect(FSYS_LIRC);
  93            */
  94          void FsysSelect(unsigned char u8FsysMode)
  95          {
  96   1        switch (u8FsysMode)
  97   1        {
  98   2              //***** HIRC enable part *****  
  99   2          case FSYS_HIRC:
 100   2              ClockEnable(FSYS_HIRC);                 //Enable HIRC
 101   2              ClockSwitch(FSYS_HIRC);                 //Switching system clock HIRC
 102   2          break;
 103   2          
 104   2          //***** LIRC enable part*****
 105   2          case FSYS_LIRC:
 106   2              ClockSwitch(FSYS_LIRC);                 // LIRC always on switch system to LIRC
 107   2              clr_CKEN_HIRCEN;                        // Disable HIRC if needed 
 108   2          break;
 109   2          
C51 COMPILER V9.60.0.0   SYS                                                               12/18/2023 17:44:27 PAGE 3   

 110   2          /***** ECLK enable part clock in with P3.0 *****/ 
 111   2          case FSYS_OSCIN_P30:
 112   2              ClockEnable(FSYS_HIRC);                 //Enable and system clock to HIRC
 113   2              ClockSwitch(FSYS_HIRC);
 114   2              ClockEnable(FSYS_OSCIN_P30);            //Enable External clock source
 115   2              ClockSwitch(FSYS_OSCIN_P30);            //Switching system clock to OSCIN 
 116   2              clr_CKEN_HIRCEN;                        //step5: disable HIRC if needed 
 117   2          break;
 118   2        }
 119   1      }
 120          
 121          void ClockEnable(unsigned char u8FsysMode)
 122          {
 123   1        switch (u8FsysMode)
 124   1        {
 125   2          /***** HIRC enable part ******/
 126   2          case FSYS_HIRC:
 127   2              set_CKEN_HIRCEN;                        //step1: Enable extnal clock source.
 128   2              while(!(CKSWT&SET_BIT5));      //step2: check clock source status and wait for ready
 129   2          break;
 130   2          /***** ECLK P30 enable part ******/
 131   2          case FSYS_OSCIN_P30:
 132   2              TA=0xAA;TA=0x55;CKEN|=0xC0;                        //step1: Enable extnal clock source.
 133   2              while(!(CKSWT&SET_BIT3));      //step2: check clock source status and wait for ready
 134   2          break;
 135   2        }
 136   1      }
 137          
 138          void ClockDisable(unsigned char u8FsysMode)
 139          {
 140   1        SFRS = 0;
 141   1        switch (u8FsysMode)
 142   1        {
 143   2           /***** HIRC Disable part ******/
 144   2          case FSYS_HIRC:
 145   2              clr_CKEN_HIRCEN;
 146   2          break;
 147   2          //***** ECLK from P3.0 Disable part ******/
 148   2          case FSYS_OSCIN_P30:
 149   2             TA=0xAA;TA=0x55;CKEN&=0x3F;
 150   2          break;
 151   2        }
 152   1      }
 153          
 154          void ClockSwitch(unsigned char u8FsysMode)
 155          {
 156   1        SFRS = 0 ;
 157   1        BIT_TMP=EA;EA=0;
 158   1        switch (u8FsysMode)
 159   1        {
 160   2          /***** HIRC Disable part ******/
 161   2          case FSYS_HIRC:
 162   2              clr_CKSWT_OSC1;
 163   2              clr_CKSWT_OSC0;
 164   2          break;
 165   2          /***** LIRC Disable part******/
 166   2          case FSYS_LIRC:
 167   2              set_CKSWT_OSC1;
 168   2              clr_CKSWT_OSC0;
 169   2          break;
 170   2          /***** ECLK P30 Disable part ******/
 171   2          case FSYS_OSCIN_P30:
C51 COMPILER V9.60.0.0   SYS                                                               12/18/2023 17:44:27 PAGE 4   

 172   2              set_CKSWT_ECLKST;
 173   2          break;
 174   2        }
 175   1        EA = BIT_TMP;
 176   1      }
 177          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    586    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
